@model EvergreenRanch.Models.ReturnRequests
@using EvergreenRanch.Models

@{
    ViewData["Title"] = "Review Return Request";
}

<div class="container py-5">
    <h2 class="mb-4 text-center fw-bold">Return Request <span class="text-primary">#@Model.ReturnId</span></h2>

    <div class="row g-4">
        <!-- Left Column: Return Details & Evidence -->
        <div class="col-md-6">
            <!-- Return Details Card -->
            <div class="card shadow-sm border-0 rounded-3 mb-4">
                <div class="card-header bg-white fw-semibold">Return Details</div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">Status:</dt>
                        <dd class="col-sm-8">
                            <span class="badge rounded-pill
                                @(Model.Status == ReturnRequests.ReturnStatus.Refunded ? "bg-success" :
                                                                    Model.Status == ReturnRequests.ReturnStatus.Rejected ? "bg-danger" :
                                                                    Model.Status == ReturnRequests.ReturnStatus.Approved ? "bg-primary" : "bg-warning text-dark")">
                                @Model.Status
                            </span>
                        </dd>

                        <dt class="col-sm-4">Request Date:</dt>
                        <dd class="col-sm-8">@Model.RequestDate.ToString("f")</dd>

                        @if (Model.ResolutionDate.HasValue)
                        {
                            <dt class="col-sm-4">Resolution Date:</dt>
                            <dd class="col-sm-8">@Model.ResolutionDate.Value.ToString("f")</dd>
                        }

                        @if (Model.RefundAmount.HasValue)
                        {
                            <dt class="col-sm-4">Refund Amount:</dt>
                            <dd class="col-sm-8">@Model.RefundAmount.Value.ToString("C")</dd>
                        }

                        <dt class="col-sm-4">Reason:</dt>
                        <dd class="col-sm-8">@Model.Reason</dd>

                        @if (!string.IsNullOrWhiteSpace(Model.Notes))
                        {
                            <dt class="col-sm-4">Notes:</dt>
                            <dd class="col-sm-8">@Model.Notes</dd>
                        }
                    </dl>
                </div>
            </div>

            <!-- Evidence Images Card -->
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-header bg-white fw-semibold">Evidence Images</div>
                <div class="card-body">
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        <div class="row g-2">
                            @foreach (var img in Model.Images)
                            {
                                if (img?.ImageData != null && !string.IsNullOrEmpty(img.ContentType))
                                {
                                    <div class="col-6 col-md-4">
                                        <a href="data:@img.ContentType;base64,@Convert.ToBase64String(img.ImageData)" target="_blank">
                                            <img src="data:@img.ContentType;base64,@Convert.ToBase64String(img.ImageData)"
                                                 class="img-fluid rounded border shadow-sm hover-zoom"
                                                 style="max-height: 150px; object-fit: cover;" />
                                        </a>
                                    </div>
                                }
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted mb-0">No images provided.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column: Order & Animal Info -->
        <div class="col-md-6">
            <!-- Order Details Card -->
            <div class="card shadow-sm border-0 rounded-3 mb-4">
                <div class="card-header bg-white fw-semibold">Order Details</div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">Order ID:</dt>
                        <dd class="col-sm-8">@Model.Order?.OrderId.ToString() ?? "<span class='text-muted'>N/A</span>"</dd>

                        <dt class="col-sm-4">Order Date:</dt>
                        <dd class="col-sm-8">@Model.Order?.OrderDate.ToString("d") ?? "<span class='text-muted'>N/A</span>"</dd>

                        <dt class="col-sm-4">Stripe Session:</dt>
                        <dd class="col-sm-8">@Model.Order?.StripeSessionId ?? "<span class='text-muted'>N/A</span>"</dd>
                    </dl>
                </div>
            </div>

            <!-- Animal Details Card -->
            <div class="card shadow-sm border-0 rounded-3">
                <div class="card-header bg-white fw-semibold">Animal Details</div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-4">Tag:</dt>
                        <dd class="col-sm-8">@Model.Animal?.AnimalTag ?? "<span class='text-muted'>N/A</span>"</dd>

                        <dt class="col-sm-4">Type:</dt>
                        <dd class="col-sm-8">@Model.Animal?.AnimalTypeID.GetEnumDisplayName() ?? "<span class='text-muted'>N/A</span>"</dd>

                        <dt class="col-sm-4">Price:</dt>
                        <dd class="col-sm-8">@Model.Animal?.MarketPrice.ToString("C") ?? "<span class='text-muted'>N/A</span>"</dd>
                    </dl>

                    @if (Model.Animal?.Picture != null)
                    {
                        <div class="text-center mt-3">
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Animal.Picture)"
                                 class="img-fluid rounded shadow-sm" style="max-height: 200px; object-fit: cover;" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="mt-4 d-flex flex-wrap gap-2">
        <form asp-action="Approve" asp-route-id="@Model.ReturnId" method="post">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-success rounded-pill">
                <i class="fas fa-check me-2"></i> Approve & Refund
            </button>
        </form>

        <form asp-action="Deny" asp-route-id="@Model.ReturnId" method="post">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger rounded-pill">
                <i class="fas fa-times me-2"></i> Reject
            </button>
        </form>

        <a asp-action="Index" class="btn btn-outline-secondary rounded-pill">
            <i class="fas fa-arrow-left me-1"></i> Back
        </a>
    </div>
</div>

<style>
    body {
        background-color: #fff;
        font-family: 'Segoe UI', Roboto, sans-serif;
    }

    h2 {
        font-size: 1.8rem;
        letter-spacing: 0.5px;
    }

    .hover-zoom {
        transition: transform 0.2s ease;
    }

        .hover-zoom:hover {
            transform: scale(1.05);
        }

    .badge {
        font-size: 0.85rem;
    }
</style>
