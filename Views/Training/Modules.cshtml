<!-- File: Views/Training/Modules.cshtml -->
@model EvergreenRanch.Models.Course
@{
    var completed = ViewBag.CompletedModuleIds as HashSet<int> ?? new();
    var canAccess = (bool)(ViewBag.CanAccess ?? false);
    ViewData["Title"] = "Modules";
}
<h2>@Model.Title - Modules</h2>

@if (!canAccess)
{
    <div class="alert alert-warning">Your application hasn't been approved yet. Complete application and wait for admin approval to access the course.</div>
}
<ul>
    @foreach (var m in Model.Modules.OrderBy(x => x.SortOrder))
    {
        <li>
            <h5>@m.Title @if(completed.Contains(m.Id)){
            <span class="badge bg-success">Done</span>
        }
</h5>
        <p>@m.Content</p>
        @if (canAccess && !completed.Contains(m.Id))
        {
            <form asp-action="MarkModuleComplete" method="post">
                <input type="hidden" name="moduleId" value="@m.Id" />
                <button class="btn btn-sm btn-outline-primary">Mark complete</button>
            </form>
        }
    </li>
        }
</ul>

<!-- show test link if all completed -->
@{
    var allModuleIds = Model.Modules.Select(m => m.Id).ToHashSet();
    var done = allModuleIds.IsSubsetOf(completed);
}
@if (canAccess && done)
{
    <a asp-controller="Test" asp-action="Start" asp-route-courseId="@Model.Id" class="btn btn-success">Take Final Test</a>
}
